#include<algorithm>
#include<vector>
#include<cmath>
#include<iostream>

using namespace std; 

const long double VAL[1500] = {
    
1.262760,
1.262760,
1.262750,
1.262700,
1.262920,
1.262860,
1.262510,
1.262760,
1.262750,
1.262720,
1.262880,
1.262890,
1.262810,
1.262760,
1.262730,
1.262350,
1.262380,
1.262670,
1.262700,
1.262710,
1.262710,
1.262670,
1.262670,
1.262680,
1.262460,
1.262190,
1.262460,
1.262410,
1.262910,
1.262910,
1.262770,
1.262800,
1.262700,
1.263010,
1.263420,
1.263390,
1.263300,
1.263360,
1.263440,
1.263400,
1.262800,
1.262950,
1.263020,
1.262990,
1.263020,
1.263230,
1.263270,
1.262990,
1.263100,
1.263140,
1.263100,
1.263110,
1.263110,
1.263120,
1.263130,
1.263130,
1.263160,
1.263150,
1.263180,
1.263170,
1.263520,
1.263560,
1.263500,
1.263480,
1.263670,
1.263370,
1.263430,
1.263450,
1.263460,
1.263460,
1.263540,
1.263540,
1.263470,
1.263540,
1.263470,
1.263440,
1.263480,
1.263490,
1.263390,
1.263410,
1.263330,
1.263280,
1.263230,
1.263210,
1.263230,
1.263430,
1.263420,
1.263410,
1.263400,
1.263400,
1.263300,
1.263230,
1.263440,
1.263440,
1.263530,
1.263450,
1.263520,
1.263510,
1.263500,
1.263540,
1.263650,
1.263640,
1.263640,
1.263640,
1.263520,
1.263430,
1.263430,
1.263470,
1.263550,
1.263620,
1.263540,
1.263620,
1.263650,
1.263650,
1.263640,
1.263630,
1.263630,
1.263630,
1.263630,
1.263450,
1.263560,
1.263570,
1.263650,
1.263540,
1.263530,
1.263540,
1.263550,
1.263530,
1.263530,
1.263560,
1.263430,
1.263460,
1.263450,
1.263420,
1.263440,
1.263440,
1.263440,
1.263460,
1.263550,
1.263430,
1.263550,
1.263560,
1.263540,
1.263630,
1.263550,
1.263540,
1.263540,
1.263540,
1.263530,
1.263420,
1.263420,
1.263440,
1.263430,
1.263540,
1.263550,
1.263550,
1.263530,
1.263440,
1.263530,
1.263560,
1.263560,
1.263560,
1.263560,
1.263570,
1.263640,
1.263640,
1.263620,
1.263540,
1.263530,
1.263630,
1.263550,
1.263630,
1.263520,
1.263540,
1.263530,
1.263520,
1.263560,
1.263760,
1.263860,
1.263960,
1.264070,
1.264150,
1.263970,
1.264100,
1.264330,
1.264270,
1.264370,
1.264480,
1.264680,
1.264560,
1.264570,
1.264650,
1.264660,
1.264550,
1.264560,
1.264470,
1.264470,
1.264460,
1.264450,
1.264460,
1.264450,
1.264450,
1.264440,
1.264430,
1.264550,
1.264540,
1.264550,
1.264540,
1.264540,
1.264540,
1.264470,
1.264550,
1.264550,
1.264540,
1.264550,
1.264580,
1.264570,
1.264560,
1.264560,
1.264560,
1.264590,
1.264680,
1.264660,
1.264650,
1.264650,
1.264650,
1.264650,
1.264640,
1.264650,
1.264670,
1.264670,
1.264660,
1.264670,
1.264640,
1.264730,
1.264750,
1.264640,
1.264660,
1.264670,
1.264690,
1.264650,
1.264770,
1.264720,
1.264640,
1.264630,
1.264640,
1.264630,
1.264630,
1.264620,
1.264630,
1.264640,
1.264550,
1.264530,
1.264530,
1.264460,
1.264570,
1.264540,
1.264470,
1.264470,
1.264580,
1.264580,
1.264670,
1.264650,
1.264660,
1.264650,
1.264630,
1.264660,
1.264790,
1.264750,
1.264760,
1.264730,
1.264810,
1.264940,
1.264960,
1.264960,
1.265050,
1.265060,
1.265270,
1.265280,
1.265270,
1.265180,
1.265170,
1.265170,
1.265150,
1.265270,
1.265150,
1.265190,
1.265170,
1.265180,
1.265170,
1.265240,
1.265230,
1.265240,
1.265240,
1.265160,
1.265020,
1.265140,
1.265070,
1.265040,
1.264960,
1.265020,
1.264940,
1.264940,
1.264950,
1.264960,
1.265120,
1.265040,
1.265030,
1.264930,
1.264810,
1.264800,
1.264740,
1.264740,
1.264720,
1.264840,
1.264840,
1.264860,
1.264860,
1.264960,
1.264940,
1.264950,
1.264930,
1.264920,
1.264910,
1.265040,
1.265060,
1.265040,
1.265070,
1.265060,
1.265070,
1.265050,
1.264960,
1.264940,
1.264940,
1.265050,
1.265050,
1.265060,
1.264960,
1.265010,
1.265060,
1.265070,
1.265040,
1.264960,
1.265050,
1.265050,
1.265150,
1.265140,
1.265140,
1.265140,
1.265150,
1.265070,
1.265050,
1.265060,
1.265050,
1.265190,
1.265250,
1.265450,
1.265380,
1.265380,
1.265370,
1.265450,
1.265470,
1.265470,
1.265490,
1.265450,
1.265450,
1.265470,
1.265480,
1.265490,
1.265460,
1.265470,
1.265470,
1.265480,
1.265500,
1.265490,
1.265460,
1.265460,
1.265480,
1.265490,
1.265470,
1.265490,
1.265480,
1.265470,
1.265450,
1.265290,
1.265240,
1.265270,
1.265270,
1.265270,
1.265280,
1.265270,
1.265260,
1.265160,
1.265180,
1.265190,
1.265190,
1.265190,
1.265180,
1.265170,
1.265170,
1.265180,
1.265230,
1.265160,
1.265170,
1.265200,
1.265180,
1.265160,
1.265160,
1.265180,
1.265270,
1.265260,
1.265250,
1.265250,
1.265250,
1.265240,
1.265240,
1.265240,
1.265230,
1.265230,
1.265150,
1.265140,
1.265190,
1.265260,
1.265170,
1.265170,
1.265160,
1.265170,
1.265180,
1.265170,
1.265160,
1.265170,
1.265160,
1.265150,
1.265120,
1.265070,
1.264970,
1.265040,
1.265030,
1.264990,
1.264980,
1.264930,
1.264870,
1.264850,
1.264770,
1.264760,
1.264740,
1.264740,
1.264650,
1.264650,
1.264640,
1.264640,
1.264550,
1.264400,
1.264460,
1.264460,
1.264460,
1.264460,
1.264460,
1.264370,
1.264460,
1.264550,
1.264470,
1.264460,
1.264490,
1.264490,
1.264450,
1.264390,
1.264430,
1.264410,
1.264380,
1.264370,
1.264410,
1.264340,
1.264380,
1.264360,
1.264350,
1.264160,
1.264130,
1.264140,
1.264160,
1.264160,
1.264160,
1.264160,
1.264160,
1.264140,
1.264160,
1.264160,
1.264170,
1.264280,
1.264280,
1.264280,
1.264300,
1.264280,
1.264300,
1.264300,
1.264390,
1.264390,
1.264390,
1.264380,
1.264390,
1.264470,
1.264480,
1.264480,
1.264480,
1.264480,
1.264480,
1.264470,
1.264460,
1.264460,
1.264260,
1.264250,
1.264280,
1.264270,
1.264360,
1.264360,
1.264350,
1.264350,
1.264350,
1.264250,
1.264240,
1.264150,
1.264170,
1.264060,
1.264060,
1.264080,
1.264040,
1.264060,
1.264070,
1.264060,
1.264080,
1.263940,
1.263830,
1.263830,
1.263830,
1.263850,
1.263850,
1.263870,
1.263850,
1.263760,
1.263720,
1.263670,
1.263150,
1.263250,
1.263340,
1.263470,
1.263470,
1.263580,
1.263560,
1.263640,
1.263770,
1.263850,
1.263850,
1.263610,
1.263250,
1.263650,
1.263440,
1.263260,
1.263290,
1.263310,
1.263250,
1.263130,
1.263340,
1.263350,
1.263360,
1.263320,
1.263230,
1.263200,
1.263210,
1.263150,
1.263140,
1.263050,
1.263030,
1.263150,
1.263310,
1.263350,
1.262960,
1.262920,
1.262960,
1.262950,
1.263060,
1.263300,
1.263440,
1.263430,
1.263170,
1.262870,
1.262960,
1.263160,
1.263320,
1.263360,
1.263360,
1.263440,
1.263420,
1.263440,
1.263510,
1.263530,
1.263560,
1.263540,
1.263520,
1.263530,
1.263150,
1.263330,
1.263510,
1.263620,
1.263720,
1.263800,
1.263810,
1.263740,
1.264080,
1.263830,
1.263820,
1.263950,
1.264040,
1.264150,
1.264220,
1.263870,
1.264040,
1.264200,
1.263800,
1.264050,
1.264250,
1.264260,
1.264630,
1.264660,
1.264660,
1.264570,
1.264330,
1.264340,
1.264330,
1.264240,
1.264160,
1.264250,
1.264380,
1.264420,
1.264470,
1.264420,
1.264250,
1.264230,
1.264230,
1.264130,
1.264380,
1.264490,
1.264530,
1.264470,
1.264750,
1.265020,
1.265080,
1.265240,
1.265280,
1.265230,
1.265390,
1.265480,
1.265460,
1.265480,
1.265460,
1.265230,
1.265530,
1.265050,
1.265430,
1.265350,
1.265660,
1.265650,
1.265660,
1.265540,
1.265240,
1.265140,
1.265240,
1.265360,
1.265030,
1.264530,
1.264540,
1.264560,
1.264950,
1.265200,
1.265110,
1.265090,
1.265130,
1.264820,
1.264880,
1.264790,
1.264810,
1.265050,
1.265140,
1.265540,
1.265460,
1.265520,
1.265530,
1.265430,
1.265250,
1.265040,
1.264930,
1.264970,
1.264810,
1.264740,
1.264390,
1.264730,
1.264870,
1.264480,
1.264600,
1.264460,
1.264610,
1.264660,
1.264820,
1.264670,
1.264540,
1.264450,
1.264590,
1.264650,
1.264780,
1.264800,
1.264830,
1.264380,
1.264530,
1.264540,
1.264620,
1.264660,
1.264420,
1.264510,
1.264460,
1.264220,
1.263990,
1.264130,
1.264090,
1.264470,
1.264460,
1.264220,
1.263890,
1.263930,
1.264040,
1.263930,
1.263930,
1.263840,
1.263960,
1.264060,
1.264070,
1.264070,
1.264060,
1.264060,
1.264080,
1.264050,
1.264120,
1.264130,
1.264230,
1.264430,
1.264440,
1.264330,
1.264310,
1.264210,
1.264010,
1.264020,
1.263950,
1.263960,
1.263960,
1.263940,
1.263960,
1.263950,
1.263960,
1.263950,
1.263960,
1.264000,
1.264050,
1.264170,
1.264250,
1.264270,
1.264170,
1.264060,
1.264360,
1.264120,
1.264190,
1.264010,
1.263940,
1.264110,
1.264140,
1.264340,
1.264500,
1.264400,
1.264140,
1.264130,
1.264020,
1.264260,
1.264540,
1.264570,
1.264730,
1.264710,
1.264640,
1.264760,
1.265130,
1.265170,
1.265160,
1.265130,
1.265040,
1.265070,
1.265030,
1.265070,
1.264920,
1.264760,
1.264910,
1.264810,
1.264750,
1.264710,
1.264540,
1.264500,
1.264530,
1.264500,
1.264460,
1.264570,
1.264530,
1.264710,
1.264760,
1.264820,
1.264630,
1.264740,
1.264810,
1.264600,
1.264630,
1.264700,
1.264600,
1.264420,
1.264410,
1.264420,
1.264630,
1.264820,
1.264920,
1.264790,
1.264940,
1.264830,
1.264960,
1.264640,
1.264740,
1.264430,
1.264520,
1.264740,
1.264540,
1.264850,
1.264940,
1.264840,
1.264810,
1.264980,
1.264710,
1.264710,
1.264640,
1.264470,
1.264630,
1.264490,
1.264440,
1.264330,
1.264250,
1.264030,
1.264130,
1.263990,
1.264010,
1.263980,
1.263940,
1.263900,
1.263430,
1.263500,
1.263640,
1.263700,
1.263570,
1.263070,
1.263250,
1.263230,
1.263410,
1.263400,
1.263570,
1.263540,
1.263570,
1.263500,
1.263580,
1.263620,
1.263750,
1.263750,
1.263630,
1.263620,
1.263650,
1.263520,
1.263140,
1.262690,
1.262520,
1.262740,
1.262930,
1.262530,
1.262560,
1.262520,
1.262320,
1.262260,
1.262020,
1.262010,
1.261830,
1.261960,
1.261880,
1.261950,
1.262250,
1.261740,
1.261430,
1.261330,
1.261190,
1.261260,
1.261330,
1.261450,
1.261380,
1.261570,
1.261450,
1.261530,
1.261720,
1.261820,
1.261920,
1.261880,
1.261930,
1.261990,
1.262060,
1.262140,
1.262170,
1.262160,
1.262170,
1.262270,
1.262380,
1.262550,
1.262750,
1.262700,
1.262840,
1.263060,
1.262950,
1.263240,
1.263130,
1.262940,
1.262700,
1.262830,
1.262750,
1.262620,
1.262450,
1.262360,
1.262310,
1.262260,
1.262360,
1.262700,
1.262460,
1.262230,
1.262160,
1.262250,
1.262470,
1.262350,
1.262460,
1.262270,
1.262340,
1.262390,
1.262380,
1.262350,
1.262480,
1.262290,
1.262260,
1.262030,
1.262460,
1.262540,
1.262610,
1.262730,
1.262550,
1.262590,
1.262870,
1.263030,
1.263060,
1.262880,
1.262650,
1.262470,
1.262370,
1.262250,
1.262240,
1.262170,
1.262260,
1.262090,
1.261810,
1.261970,
1.262160,
1.262160,
1.262440,
1.262280,
1.262790,
1.262660,
1.262500,
1.262580,
1.262300,
1.262540,
1.262550,
1.262390,
1.262240,
1.262260,
1.262350,
1.262530,
1.262400,
1.262430,
1.262520,
1.262520,
1.262570,
1.262680,
1.262910,
1.262870,
1.263140,
1.263030,
1.262940,
1.262970,
1.263170,
1.263300,
1.263360,
1.263240,
1.263460,
1.263500,
1.263520,
1.263400,
1.263450,
1.263530,
1.263780,
1.263980,
1.264270,
1.264220,
1.263930,
1.264020,
1.264120,
1.263960,
1.263610,
1.263630,
1.263540,
1.263530,
1.264070,
1.264380,
1.264030,
1.263860,
1.263530,
1.263730,
1.263850,
1.263610,
1.263770,
1.263640,
1.263640,
1.263810,
1.263880,
1.264050,
1.263930,
1.263960,
1.264070,
1.264330,
1.264370,
1.264360,
1.264460,
1.264340,
1.264230,
1.264690,
1.264860,
1.264740,
1.264620,
1.264680,
1.264620,
1.264880,
1.264920,
1.264830,
1.264420,
1.264510,
1.264450,
1.264440,
1.264420,
1.264440,
1.264410,
1.264430,
1.264350,
1.264320,
1.263610,
1.263550,
1.264180,
1.264230,
1.264550,
1.264430,
1.264650,
1.264830,
1.264650,
1.264620,
1.264420,
1.264110,
1.263810,
1.262740,
1.262960,
1.262930,
1.263080,
1.263340,
1.263450,
1.263710,
1.263670,
1.263420,
1.263290,
1.263000,
1.263240,
1.263290,
1.263220,
1.263250,
1.263180,
1.263300,
1.263330,
1.263290,
1.263240,
1.263120,
1.262970,
1.262810,
1.262310,
1.262410,
1.262610,
1.262670,
1.262520,
1.262550,
1.262710,
1.262850,
1.262600,
1.262530,
1.262310,
1.262470,
1.262640,
1.262640,
1.262720,
1.262620,
1.262700,
1.262640,
1.262750,
1.262880,
1.262890,
1.262660,
1.262890,
1.262630,
1.262630,
1.262420,
1.262010,
1.261720,
1.261870,
1.262060,
1.262150,
1.262150,
1.261940,
1.262020,
1.261930,
1.261920,
1.261900,
1.261720,
1.261630,
1.261860,
1.261830,
1.261740,
1.261910,
1.261950,
1.261870,
1.261820,
1.261910,
1.262070,
1.262150,
1.262420,
1.262420,
1.262330,
1.262320,
1.262540,
1.262450,
1.262560,
1.262630,
1.262790,
1.262820,
1.262690,
1.262780,
1.262810,
1.262740,
1.262920,
1.262840,
1.262910,
1.262940,
1.262920,
1.262940,
1.263040,
1.262950,
1.263190,
1.263160,
1.263070,
1.263270,
1.263430,
1.263440,
1.263430,
1.263420,
1.263450,
1.263420,
1.263520,
1.263640,
1.263600,
1.263710,
1.263730,
1.263650,
1.263730,
1.263980,
1.264160,
1.264000,
1.263690,
1.263700,
1.263650,
1.263730,
1.263740,
1.263740,
1.263610,
1.263600,
1.263500,
1.263460,
1.263560,
1.263730,
1.263860,
1.263760,
1.263810,
1.263860,
1.263850,
1.263840,
1.263720,
1.263420,
1.263630,
1.264040,
1.264010,
1.263980,
1.264040,
1.264130,
1.264300,
1.264340,
1.264280,
1.264210,
1.264220,
1.264130,
1.264120,
1.264070,
1.264180,
1.264260,
1.264250,
1.264350,
1.264550,
1.264360,
1.264890,
1.265000,
1.265250,
1.265210,
1.265320,
1.265250,
1.265430,
1.265540,
1.265670,
1.265430,
1.265620,
1.265520,
1.265680,
1.265760,
1.265480,
1.265860,
1.266040,
1.266340,
1.266350,
1.266450,
1.266300,
1.266460,
1.266530,
1.266420,
1.266320,
1.266520,
1.266610,
1.266560,
1.266490,
1.265810,
1.265900,
1.266110,
1.266110,
1.266110,
1.266040,
1.266010,
1.266120,
1.266220,
1.266220,
1.266580,
1.266640,
1.266620,
1.266410,
1.266530,
1.266220,
1.266240,
1.266230,
1.266230,
1.266430,
1.266530,
1.266440,
1.266520,
1.266540,
1.266630,
1.266640,
1.266650,
1.266550,
1.266550,
1.266440,
1.266330,
1.266440,
1.266420,
1.266360,
1.266510,
1.266510,
1.266520,
1.266560,
1.266560,
1.266520,
1.266310,
1.266270,
1.266320,
1.266300,
1.266430,
1.266410,
1.266390,
1.266390,
1.266490,
1.266450,
1.266530,
1.266530,
1.266540,
1.266520,
1.266520,
1.266520,
1.266430,
1.266310,
1.266410,
1.266760,
1.266430,
1.266420,
1.266520,
1.266420,
1.266630,
1.266650,
1.266860,
1.266940,
1.267080,
1.267250,
1.267050,
1.267020,
1.267230,
1.267230,
1.267210,
1.267030,
1.267150,
1.267100,
1.267030,
1.267210,
1.267140,
1.267130,
1.267060,
1.267070,
1.267150,
1.267140,
1.267170,
1.267260,
1.267170,
1.267330,
1.267180,
1.267190,
1.267270,
1.267180,
1.267180,
1.267130,
1.267170,
1.267060,
1.267140,
1.267140,
1.267150,
1.267070,
1.266950,
1.266970,
1.266950,
1.266930,
1.266940,
1.266940,
1.266930,
1.266920,
1.266850,
1.266760,
1.266840,
1.266940,
1.266950,
1.266970,
1.266890,
1.266870,
1.266870,
1.266810,
1.266770,
1.266690,
1.266730,
1.266750,
1.266750,
1.266760,
1.266750,
1.266760,
1.266670,
1.266660,
1.266660,
1.266630,
1.266580,
1.266620,
1.266580,
1.266620,
1.266530,
1.266460,
1.266450,
1.266440,
1.266460,
1.266440,
1.266440,
1.266440,
1.266440,
1.266420,
1.266460,
1.266540,
1.266540,
1.266540,
1.266540,
1.266540,
1.266520,
1.266530,
1.266570,
1.266540,
1.266520,
1.266480,
1.266460,
1.266490,
1.266480,
1.266490,
1.266480,
1.266500,
1.266480,
1.266580,
1.266590,
1.266570,
1.266560,
1.266550,
1.266570,
1.266590,
1.266590,
1.266500,
1.266490,
1.266420,
1.266410,
1.266380,
1.266340,
1.266300,
1.266320,
1.266410,
1.266400,
1.266400,
1.266400,
1.266400,
1.266400,
1.266330,
1.266380,
1.266370,
1.266350,
1.266340,
1.266300,
1.266200,
1.266210,
1.266300,
1.266290,
1.266210,
1.266130,
1.266110,
1.266110,
1.266140,
1.266140,
1.266130,
1.266140,
1.266120,
1.266100,
1.266110,
1.266090,
1.266170,
1.266180,
1.266170,
1.266170,
1.266200,
1.266130,
1.266130,
1.266120,
1.266120,
1.266130,
1.266140,
1.266150,
1.265840,
1.265860,
1.266130,
1.266250,
1.266140,
1.265920,
1.265920,
1.266140,
1.266160,
1.266160,
1.266130,
1.266070,
1.266090,
1.266240,
1.266490,
1.266530,
1.266490,
1.266480,
1.266440,
1.266280,
};



class linetrader{
    
    public:

    double trader(int today);
    
    double perc_change(double prev, double today);
    
};




double linetrader :: trader(int today){ 
     //determine long or short -> p 
     //determine share count   -> c 
     //return p*c 
     double p = 0;
     double c = 0;
     
     const double MAXLOT = 10000;
     const double MAX = .0015;
     
    if(today == 0){
        return 1;
    }
    

     long double st = VAL[0];
     long double deltax = 1;
     long double deltay; 
     
     
     vector<double> velocity; 
     velocity.clear(); 
     vector<double> acceleration; 
     acceleration.clear();
     vector<double> jerk;
     jerk.clear();
     
     
     
     for(int i  = 1; i<today; i++) {
        deltay = VAL[i]-VAL[i-1]; 
        velocity.push_back(deltay);
     }
     
    if(deltay>0){
        p = -1;
    }
    
    if(deltay<0){
        p = 1;
    }
    
    
    
     
     for(int i = 1; i<today; i++) {
         deltay = velocity[i]-velocity[i-1];
         acceleration.push_back(deltay);
    }
    
    double shares= fabs(deltay); 
    c = (shares/MAX)*MAXLOT; 
    
    
   
    for(int i = 1; i<today; i++) { 
        deltay = acceleration[i]-acceleration[i-1];
        jerk.push_back(deltay);
    }
    
    double posit = c*p;
    return posit;
}



double linetrader :: perc_change(double prev, double today){
    return (today-prev)/prev; 
}


int main(){
    
 linetrader x;
 
 double position, pnl=0; 
 
 
 for(int i=1;i<1500;i++){
     
    position = x.trader(i-1);
    
    if(position>0)
    {
        pnl += x.perc_change(VAL[i-1],VAL[i]) * position * VAL[i-1];
    }
    
    if(position<0)
    {
        pnl += x.perc_change(VAL[i-1],VAL[i])*(position) * VAL[i-1]; 
    }
    
    cout<<pnl<<", ";
    
 }
  
 return 0;   
}
