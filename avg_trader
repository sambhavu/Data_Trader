#include <cmath> 
#include <vector> 
#include <algorithm>
#include <iostream>
#include <string>

using namespace std;

int main()
{
    double BIT[30] = {  10185.50, 9754.42,  9510.20,  9598.17,  9630.66,  9757.97,10346.76,
                        10623.54, 10594.49, 10575.53, 10353.30, 10517.25, 10441.28, 
                        10334.97, 10115.98, 10178.37, 10410.13, 10360.55, 10358.05, 
                        10347.71, 10276.79, 10241.27, 10198.25, 10266.41, 10181.64, 
                        10019.72, 10070.39, 9729.32,  8620.57,  8486.99};
                        
    double average, sum, count; 
    double highest, lowest; 
    
    sum = 0;
    count = 0;
    double profit[30] = {};
    average = 0;
    highest = 0; 
    lowest = 0; 
    int fail; 
    double sum_profit = 0;
    
    for(int i = 0; i<30;i++){ 
        sum +=BIT[i]; 
        count++; 
        average = sum/count;
        fail =0;
        
        if(BIT[i]>BIT[i-1])
        {   
            for(int j=0;j<=i;j++){
                if(BIT[i]<BIT[j]) fail = 1;
            }
            if(fail == 0) highest = BIT[i]; 
        }
        
        if(BIT[i]<BIT[i-1])
        {
            for(int k = 0; k<=i; k++){
                if(BIT[i]>BIT[k]) fail = 1;
            }
            if(fail == 0) lowest = BIT[i];
        }
        
        
        
        if(BIT[i]<average){
            profit[i] = BIT[i]; 
        }
        else profit[i] = 0;
    }
        
        
    //closing out profits on last day 
    for(int c = 0; c<=30; c++) 
        { 
        if(profit[c] != 0){
                sum_profit += (BIT[30] - profit[c]);  //closing all long positions
        }
    }
            
    
        
    cout<< highest<<"\n";
    cout<< lowest<<"\n";
    cout<< sum_profit;
    
    return 0;
}
